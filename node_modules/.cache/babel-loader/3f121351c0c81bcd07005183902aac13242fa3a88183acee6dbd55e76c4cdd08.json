{"ast":null,"code":"const STORAGE_KEY = 'wellness-tracker-data';\nexport const saveDailyData = (date, data) => {\n  const existingData = getAllData();\n  const existingDateData = existingData[date] || {\n    date,\n    meals: [],\n    workouts: [],\n    skincare: [],\n    tasks: []\n  };\n  const updatedData = {\n    ...existingData,\n    [date]: {\n      ...existingDateData,\n      ...data\n    }\n  };\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(updatedData));\n};\nexport const getDailyData = date => {\n  const allData = getAllData();\n  return allData[date] || {\n    date,\n    meals: [],\n    workouts: [],\n    skincare: [],\n    tasks: []\n  };\n};\nexport const getAllData = () => {\n  const data = localStorage.getItem(STORAGE_KEY);\n  return data ? JSON.parse(data) : {};\n};\nexport const addMeal = (date, meal) => {\n  const dailyData = getDailyData(date);\n  dailyData.meals.push(meal);\n  saveDailyData(date, dailyData);\n};\nexport const addWorkout = (date, workout) => {\n  const dailyData = getDailyData(date);\n  dailyData.workouts.push(workout);\n  saveDailyData(date, dailyData);\n};\nexport const updateSkincare = (date, skincare) => {\n  const dailyData = getDailyData(date);\n  dailyData.skincare = skincare;\n  saveDailyData(date, dailyData);\n};\nexport const addTask = (date, task) => {\n  const dailyData = getDailyData(date);\n  dailyData.tasks.push(task);\n  saveDailyData(date, dailyData);\n};\nexport const updateTask = (date, taskId, completed) => {\n  const dailyData = getDailyData(date);\n  const taskIndex = dailyData.tasks.findIndex(task => task.id === taskId);\n  if (taskIndex !== -1) {\n    dailyData.tasks[taskIndex].completed = completed;\n    saveDailyData(date, dailyData);\n  }\n};\nexport const deleteItem = (date, type, id) => {\n  const dailyData = getDailyData(date);\n  switch (type) {\n    case 'meal':\n      dailyData.meals = dailyData.meals.filter(meal => meal.id !== id);\n      break;\n    case 'workout':\n      dailyData.workouts = dailyData.workouts.filter(workout => workout.id !== id);\n      break;\n    case 'task':\n      dailyData.tasks = dailyData.tasks.filter(task => task.id !== id);\n      break;\n  }\n  saveDailyData(date, dailyData);\n};","map":{"version":3,"names":["STORAGE_KEY","saveDailyData","date","data","existingData","getAllData","existingDateData","meals","workouts","skincare","tasks","updatedData","localStorage","setItem","JSON","stringify","getDailyData","allData","getItem","parse","addMeal","meal","dailyData","push","addWorkout","workout","updateSkincare","addTask","task","updateTask","taskId","completed","taskIndex","findIndex","id","deleteItem","type","filter"],"sources":["/Users/navyanth/Wellbeing/src/utils/storage.ts"],"sourcesContent":["import { DailyData, Meal, Workout, SkincareStep, Task } from '../types';\n\nconst STORAGE_KEY = 'wellness-tracker-data';\n\nexport const saveDailyData = (date: string, data: Partial<DailyData>): void => {\n  const existingData = getAllData();\n  const existingDateData = existingData[date] || {\n    date,\n    meals: [],\n    workouts: [],\n    skincare: [],\n    tasks: [],\n  };\n  \n  const updatedData = {\n    ...existingData,\n    [date]: {\n      ...existingDateData,\n      ...data,\n    },\n  };\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(updatedData));\n};\n\nexport const getDailyData = (date: string): DailyData => {\n  const allData = getAllData();\n  return allData[date] || {\n    date,\n    meals: [],\n    workouts: [],\n    skincare: [],\n    tasks: [],\n  };\n};\n\nexport const getAllData = (): Record<string, DailyData> => {\n  const data = localStorage.getItem(STORAGE_KEY);\n  return data ? JSON.parse(data) : {};\n};\n\nexport const addMeal = (date: string, meal: Meal): void => {\n  const dailyData = getDailyData(date);\n  dailyData.meals.push(meal);\n  saveDailyData(date, dailyData);\n};\n\nexport const addWorkout = (date: string, workout: Workout): void => {\n  const dailyData = getDailyData(date);\n  dailyData.workouts.push(workout);\n  saveDailyData(date, dailyData);\n};\n\nexport const updateSkincare = (date: string, skincare: SkincareStep[]): void => {\n  const dailyData = getDailyData(date);\n  dailyData.skincare = skincare;\n  saveDailyData(date, dailyData);\n};\n\nexport const addTask = (date: string, task: Task): void => {\n  const dailyData = getDailyData(date);\n  dailyData.tasks.push(task);\n  saveDailyData(date, dailyData);\n};\n\nexport const updateTask = (date: string, taskId: string, completed: boolean): void => {\n  const dailyData = getDailyData(date);\n  const taskIndex = dailyData.tasks.findIndex(task => task.id === taskId);\n  if (taskIndex !== -1) {\n    dailyData.tasks[taskIndex].completed = completed;\n    saveDailyData(date, dailyData);\n  }\n};\n\nexport const deleteItem = (date: string, type: 'meal' | 'workout' | 'task', id: string): void => {\n  const dailyData = getDailyData(date);\n  switch (type) {\n    case 'meal':\n      dailyData.meals = dailyData.meals.filter(meal => meal.id !== id);\n      break;\n    case 'workout':\n      dailyData.workouts = dailyData.workouts.filter(workout => workout.id !== id);\n      break;\n    case 'task':\n      dailyData.tasks = dailyData.tasks.filter(task => task.id !== id);\n      break;\n  }\n  saveDailyData(date, dailyData);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}